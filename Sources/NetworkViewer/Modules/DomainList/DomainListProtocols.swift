//
//  DomainListProtocols.swift
//  Olimp
//
//  Created Sakhabaev Egor on 10.11.2023.
//  Copyright Â© 2023 ___ORGANIZATIONNAME___. All rights reserved.
//
//  Template generated by Sakhabaev Egor @Banck
//  https://github.com/Banck/SwiftUI-Coordinator-template
//

import Foundation
import SwiftUI

// MARK: - DomainListModuleInput
protocol DomainListModuleInput: AnyObject { }

// MARK: - DomainListModuleOutput
struct DomainListModuleOutput {
    
//    let didSelectSearchResult: (_ searchResult: String) -> Void
}

// MARK: - Presenter
protocol DomainListPresenterInterface: ObservableObject {

    // MARK: - Lifecycle
    func viewDidLoad()
    func viewWillAppear()
    func viewWillDisappear()
}

extension DomainListPresenterInterface {

    func viewDidLoad() {/*leaves this empty*/}
    func viewWillAppear() {/*leaves this empty*/}
    func viewWillDisappear() {/*leaves this empty*/}
}



// MARK: - Interactor
protocol DomainListInteractorOutput: AnyObject {

    /* Interactor -> Presenter */
}

protocol DomainListInteractorInput: AnyObject {

    var presenter: DomainListInteractorOutput? { get set }

    /* Presenter -> Interactor */
}

// MARK: - View
protocol DomainListView {

}
